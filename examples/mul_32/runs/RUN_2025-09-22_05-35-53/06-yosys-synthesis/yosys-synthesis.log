
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)

1. Executing Liberty frontend: /foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.
[INFO] Using SDC file '/home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/synthesis.abc.sdc' for ABCâ€¦

2. Executing Verilog-2005 frontend: /home/asic/workspace/mul_32/rtl/mul_32.sv
Parsing SystemVerilog input from `/home/asic/workspace/mul_32/rtl/mul_32.sv' to AST representation.
Storing AST representation for module `$abstract\mul_32'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\mul_32'.
Generating RTLIL representation for module `\mul_32'.

4.1. Analyzing design hierarchy..
Top module:  \mul_32

4.2. Analyzing design hierarchy..
Top module:  \mul_32
Removing unused module `$abstract\mul_32'.
Removed 1 unused modules.
Renaming module mul_32 to mul_32.

5. Generating Graphviz representation of design.
Writing dot description to `/home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/hierarchy.dot'.
Dumping module mul_32 to page 1.

6. Executing TRIBUF pass.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \mul_32

7.2. Analyzing design hierarchy..
Top module:  \mul_32
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

14. Executing PROC_MUX pass (convert decision trees to multiplexers).

15. Executing PROC_DLATCH pass (convert process syncs to latches).

16. Executing PROC_DFF pass (convert process syncs to FFs).

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module mul_32...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

21. Executing FLATTEN pass (flatten design).

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mul_32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mul_32.
Performed a total of 0 changes.

28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

29. Executing OPT_DFF pass (perform DFF optimizations).

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

31. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

32. Executing FSM pass (extract and optimize FSM).

32.1. Executing FSM_DETECT pass (finding FSMs in design).

32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

33. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mul_32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mul_32.
Performed a total of 0 changes.

37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

38. Executing OPT_DFF pass (perform DFF optimizations).

39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

40. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

41. Executing WREDUCE pass (reducing word size of cells).

42. Executing PEEPOPT pass (run peephole optimizers).

43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

44. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mul_32:
  creating $macc model for $mul$/home/asic/workspace/mul_32/rtl/mul_32.sv:10$1 ($mul).
  creating $macc cell for $mul$/home/asic/workspace/mul_32/rtl/mul_32.sv:10$1: $auto$alumacc.cc:365:replace_macc$2
  created 0 $alu and 1 $macc cells.

45. Executing SHARE pass (SAT-based resource sharing).

46. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mul_32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mul_32.
Performed a total of 0 changes.

50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

51. Executing OPT_DFF pass (perform DFF optimizations).

52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

53. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

54. Executing MEMORY pass.

54.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

54.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

54.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

54.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

54.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

54.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

54.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

54.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

54.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

54.10. Executing MEMORY_COLLECT pass (generating $mem cells).

55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

56. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

58. Executing OPT_DFF pass (perform DFF optimizations).

59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

60. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

61. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mul_32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mul_32.
Performed a total of 0 changes.

65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

66. Executing OPT_SHARE pass.

67. Executing OPT_DFF pass (perform DFF optimizations).

68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

69. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

70. Executing TECHMAP pass (map to technology primitives).

70.1. Executing Verilog-2005 frontend: /foss/tools/yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/foss/tools/yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

70.2. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \A * \B (32x32 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~794 debug messages>

71. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.
<suppressed ~5913 debug messages>

72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

73. Executing OPT_DFF pass (perform DFF optimizations).

74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..
Removed 78 unused cells and 372 unused wires.
<suppressed ~79 debug messages>

75. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

77. Executing OPT_DFF pass (perform DFF optimizations).

78. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

79. Executing ABC pass (technology mapping using ABC).

79.1. Extracting gate netlist of module `\mul_32' to `<abc-temp-dir>/input.blif'..
Extracted 6277 gates and 6341 wires to a netlist network with 64 inputs and 64 outputs.

79.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

79.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      892
ABC RESULTS:            ANDNOT cells:     1936
ABC RESULTS:              NAND cells:      389
ABC RESULTS:               NOR cells:      165
ABC RESULTS:               NOT cells:      128
ABC RESULTS:                OR cells:      735
ABC RESULTS:             ORNOT cells:       80
ABC RESULTS:              XNOR cells:      493
ABC RESULTS:               XOR cells:     1587
ABC RESULTS:        internal signals:     6213
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       64
Removing temp directory.

80. Executing OPT pass (performing simple optimizations).

80.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

80.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

80.3. Executing OPT_DFF pass (perform DFF optimizations).

80.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..
Removed 0 unused cells and 501 unused wires.
<suppressed ~1 debug messages>

80.5. Finished fast OPT passes.

81. Executing HIERARCHY pass (managing design hierarchy).

81.1. Analyzing design hierarchy..
Top module:  \mul_32

81.2. Analyzing design hierarchy..
Top module:  \mul_32
Removed 0 unused modules.

82. Executing CHECK pass (checking for obvious problems).
Checking module mul_32...
Found and reported 0 problems.

83. Printing statistics.

=== mul_32 ===

   Number of wires:               6345
   Number of wire bits:           6470
   Number of public wires:           4
   Number of public wire bits:     129
   Number of ports:                  4
   Number of port bits:            129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

84. Generating Graphviz representation of design.
Writing dot description to `/home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/primitive_techmap.dot'.
Dumping module mul_32 to page 1.

85. Executing OPT pass (performing simple optimizations).

85.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

85.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

85.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mul_32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

85.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mul_32.
Performed a total of 0 changes.

85.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mul_32'.
Removed a total of 0 cells.

85.6. Executing OPT_DFF pass (perform DFF optimizations).

85.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..

85.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mul_32.

85.9. Finished OPT passes. (There is nothing left to do.)

86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..
{
   "creator": "Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/tmp/3f55eaaf2def4821b5a775f0375524fc.lib ",
   "modules": {
      "\\mul_32": {
         "num_wires":         6345,
         "num_wire_bits":     6470,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6405,
         "num_cells_by_type": {
            "$_ANDNOT_": 1936,
            "$_AND_": 892,
            "$_NAND_": 389,
            "$_NOR_": 165,
            "$_NOT_": 128,
            "$_ORNOT_": 80,
            "$_OR_": 735,
            "$_XNOR_": 493,
            "$_XOR_": 1587
         }
      }
   },
      "design": {
         "num_wires":         6345,
         "num_wire_bits":     6470,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6405,
         "num_cells_by_type": {
            "$_ANDNOT_": 1936,
            "$_AND_": 892,
            "$_NAND_": 389,
            "$_NOR_": 165,
            "$_NOT_": 128,
            "$_ORNOT_": 80,
            "$_OR_": 735,
            "$_XNOR_": 493,
            "$_XOR_": 1587
         }
      }
}

87. Printing statistics.

=== mul_32 ===

   Number of wires:               6345
   Number of wire bits:           6470
   Number of public wires:           4
   Number of public wire bits:     129
   Number of ports:                  4
   Number of port bits:            129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!

[INFO] Applying tri-state buffer mapping from '/foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v'â€¦

88. Executing TECHMAP pass (map to technology primitives).

88.1. Executing Verilog-2005 frontend: /foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

89. Executing SIMPLEMAP pass (map simple cells to gate primitives).
[INFO] Applying latch mapping from '/foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v'â€¦

90. Executing TECHMAP pass (map to technology primitives).

90.1. Executing Verilog-2005 frontend: /foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/foss/pdks/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

90.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

91. Executing SIMPLEMAP pass (map simple cells to gate primitives).

92. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFE_NN_
    unmapped dff cell: $_DFFE_NP_
    unmapped dff cell: $_DFFE_PN_
    unmapped dff cell: $_DFFE_PP_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

92.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\mul_32':
{
   "creator": "Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/tmp/3f55eaaf2def4821b5a775f0375524fc.lib ",
   "modules": {
      "\\mul_32": {
         "num_wires":         6345,
         "num_wire_bits":     6470,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6405,
         "num_cells_by_type": {
            "$_ANDNOT_": 1936,
            "$_AND_": 892,
            "$_NAND_": 389,
            "$_NOR_": 165,
            "$_NOT_": 128,
            "$_ORNOT_": 80,
            "$_OR_": 735,
            "$_XNOR_": 493,
            "$_XOR_": 1587
         }
      }
   },
      "design": {
         "num_wires":         6345,
         "num_wire_bits":     6470,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6405,
         "num_cells_by_type": {
            "$_ANDNOT_": 1936,
            "$_AND_": 892,
            "$_NAND_": 389,
            "$_NOR_": 165,
            "$_NOT_": 128,
            "$_ORNOT_": 80,
            "$_OR_": 735,
            "$_XNOR_": 493,
            "$_XOR_": 1587
         }
      }
}

93. Printing statistics.

=== mul_32 ===

   Number of wires:               6345
   Number of wire bits:           6470
   Number of public wires:           4
   Number of public wire bits:     129
   Number of ports:                  4
   Number of port bits:            129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!

[INFO] Using generated ABC script '/home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/AREA_0.abc'â€¦

94. Executing ABC pass (technology mapping using ABC).

94.1. Extracting gate netlist of module `\mul_32' to `/tmp/yosys-abc-5xcg0c/input.blif'..
Extracted 6405 gates and 6469 wires to a netlist network with 64 inputs and 64 outputs.

94.1.1. Executing ABC.
Running ABC command: "/foss/tools/yosys/bin/yosys-abc" -s -f /tmp/yosys-abc-5xcg0c/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-5xcg0c/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-5xcg0c/input.blif 
ABC: + read_lib -w /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/tmp/3f55eaaf2def4821b5a775f0375524fc.lib 
ABC: Parsing finished successfully.  Parsing time =     0.05 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/tmp/3f55eaaf2def4821b5a775f0375524fc.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.09 sec
ABC: Memory =    9.54 MB. Time =     0.09 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/synthesis.abc.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2/Y".
ABC: Setting output load to be 33.442001.
ABC: + source /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/06-yosys-synthesis/AREA_0.abc 
ABC: Error: The network is combinational.
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: WireLoad = "none"  Gates =   5371 (  1.3 %)   Cap = 10.6 ff (  1.0 %)   Area =    53510.07 ( 97.0 %)   Delay =  8855.67 ps  (  1.8 %)               
ABC: Path  0 --      53 : 0   57 pi                        A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout = 184.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1962 : 4    3 sky130_fd_sc_hd__and4_2   A =  10.01  Df = 226.5   -3.2 ps  S =  78.4 ps  Cin =  1.5 ff  Cout =   8.2 ff  Cmax = 300.3 ff  G =  513  
ABC: Path  2 --    1964 : 3    2 sky130_fd_sc_hd__or3_2    A =   7.51  Df = 689.1 -308.7 ps  S =  91.4 ps  Cin =  1.5 ff  Cout =   6.9 ff  Cmax = 310.4 ff  G =  441  
ABC: Path  3 --    1968 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df = 909.3 -368.7 ps  S =  61.7 ps  Cin =  2.4 ff  Cout =   9.6 ff  Cmax = 309.5 ff  G =  390  
ABC: Path  4 --    1970 : 3    2 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =1128.2 -217.2 ps  S =  49.9 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 309.5 ff  G =  288  
ABC: Path  5 --    1973 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =1357.4 -222.9 ps  S =  69.6 ps  Cin =  2.4 ff  Cout =  11.4 ff  Cmax = 309.5 ff  G =  461  
ABC: Path  6 --    1976 : 3    2 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =1516.7 -180.9 ps  S = 127.5 ps  Cin =  4.6 ff  Cout =   7.2 ff  Cmax = 128.2 ff  G =  146  
ABC: Path  7 --    1977 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =1905.2 -248.0 ps  S =  67.8 ps  Cin =  2.4 ff  Cout =  10.3 ff  Cmax = 325.0 ff  G =  423  
ABC: Path  8 --    2123 : 4    2 sky130_fd_sc_hd__o211ai_2 A =  12.51  Df =2415.3 -206.8 ps  S = 117.2 ps  Cin =  4.4 ff  Cout =   3.3 ff  Cmax = 133.7 ff  G =   73  
ABC: Path  9 --    2124 : 4    5 sky130_fd_sc_hd__or4bb_2  A =  12.51  Df =3028.2  -53.9 ps  S = 148.8 ps  Cin =  1.5 ff  Cout =  18.5 ff  Cmax = 312.2 ff  G = 1199  
ABC: Path 10 --    2269 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =3400.1 -223.4 ps  S =  56.5 ps  Cin =  2.4 ff  Cout =   6.0 ff  Cmax = 325.0 ff  G =  244  
ABC: Path 11 --    2271 : 4    5 sky130_fd_sc_hd__and4_2   A =  10.01  Df =3660.0 -207.7 ps  S = 118.7 ps  Cin =  1.5 ff  Cout =  16.9 ff  Cmax = 300.3 ff  G = 1037  
ABC: Path 12 --    2275 : 4    2 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =3931.6 -157.0 ps  S =  61.6 ps  Cin =  2.4 ff  Cout =   6.2 ff  Cmax = 268.3 ff  G =  245  
ABC: Path 13 --    2276 : 3    4 sky130_fd_sc_hd__or3_2    A =   7.51  Df =4393.3 -304.6 ps  S = 113.5 ps  Cin =  1.5 ff  Cout =  13.9 ff  Cmax = 310.4 ff  G =  885  
ABC: Path 14 --    2421 : 4    5 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =4797.7 -218.9 ps  S = 104.3 ps  Cin =  2.4 ff  Cout =  19.6 ff  Cmax = 325.0 ff  G =  800  
ABC: Path 15 --    2425 : 3    3 sky130_fd_sc_hd__and3_2   A =   7.51  Df =5012.9 -242.0 ps  S =  56.7 ps  Cin =  1.5 ff  Cout =   5.5 ff  Cmax = 309.5 ff  G =  345  
ABC: Path 16 --    2582 : 4    2 sky130_fd_sc_hd__or4_2    A =   8.76  Df =5551.1 -506.0 ps  S = 104.4 ps  Cin =  1.5 ff  Cout =   4.2 ff  Cmax = 310.4 ff  G =  262  
ABC: Path 17 --    2893 : 4    2 sky130_fd_sc_hd__or4bb_2  A =  12.51  Df =6172.1 -580.5 ps  S =  99.2 ps  Cin =  1.5 ff  Cout =   4.2 ff  Cmax = 312.2 ff  G =  271  
ABC: Path 18 --    2899 : 3    2 sky130_fd_sc_hd__or3_2    A =   7.51  Df =6628.1 -939.1 ps  S =  75.8 ps  Cin =  1.5 ff  Cout =   3.0 ff  Cmax = 310.4 ff  G =  187  
ABC: Path 19 --    2901 : 3    2 sky130_fd_sc_hd__or3b_2   A =   8.76  Df =7100.3-1309.4 ps  S =  80.5 ps  Cin =  1.5 ff  Cout =   4.1 ff  Cmax = 269.2 ff  G =  256  
ABC: Path 20 --    4020 : 5    4 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =7533.0-1534.6 ps  S =  92.0 ps  Cin =  2.3 ff  Cout =  13.7 ff  Cmax = 298.5 ff  G =  566  
ABC: Path 21 --    4821 : 4    3 sky130_fd_sc_hd__a22oi_2  A =  12.51  Df =7754.9-1671.8 ps  S = 221.6 ps  Cin =  4.3 ff  Cout =  12.0 ff  Cmax = 170.3 ff  G =  269  
ABC: Path 22 --    5327 : 5    3 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =8010.4-1563.1 ps  S =  98.5 ps  Cin =  2.3 ff  Cout =  15.1 ff  Cmax = 298.5 ff  G =  634  
ABC: Path 23 --    5402 : 3    4 sky130_fd_sc_hd__and3_2   A =   7.51  Df =8227.0-1547.8 ps  S =  82.8 ps  Cin =  1.5 ff  Cout =  11.2 ff  Cmax = 309.5 ff  G =  714  
ABC: Path 24 --    5456 : 5    3 sky130_fd_sc_hd__o311a_2  A =  11.26  Df =8444.8-1342.4 ps  S =  84.0 ps  Cin =  2.4 ff  Cout =  11.8 ff  Cmax = 293.9 ff  G =  475  
ABC: Path 25 --    5477 : 2    1 sky130_fd_sc_hd__nor2_2   A =   6.26  Df =8495.0-1268.4 ps  S = 119.6 ps  Cin =  4.4 ff  Cout =   8.4 ff  Cmax = 141.9 ff  G =  186  
ABC: Path 26 --    5478 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =8855.7-1380.3 ps  S = 453.9 ps  Cin =  8.5 ff  Cout =  33.4 ff  Cmax = 121.8 ff  G =  394  
ABC: Start-point = pi52 (\A [26]).  End-point = po55 (\C [61]).
ABC: netlist                       : i/o =   64/   64  lat =    0  nd =  5371  edge =  15673  area =53518.23  delay =27.00  lev = 27
ABC: + write_blif /tmp/yosys-abc-5xcg0c/output.blif 

94.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      133
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      161
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      101
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      393
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      212
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      214
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      176
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       83
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      121
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      171
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      217
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      233
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       69
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      460
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:       92
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      342
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:      154
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      319
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       55
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      150
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:      129
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      105
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:       93
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       61
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      102
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      101
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:      507
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      137
ABC RESULTS:        internal signals:     6341
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       64
Removing temp directory.

95. Executing SETUNDEF pass (replace undef values with defined constants).

96. Executing HILOMAP pass (mapping to constant drivers).

97. Executing SPLITNETS pass (splitting up multi-bit signals).

98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mul_32..
Removed 0 unused cells and 6469 unused wires.
<suppressed ~1 debug messages>

99. Executing INSBUF pass (insert buffer cells for connected wires).

100. Executing CHECK pass (checking for obvious problems).
Checking module mul_32...
Found and reported 0 problems.
{
   "creator": "Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/asic/workspace/mul_32/runs/RUN_2025-09-22_05-35-53/tmp/3f55eaaf2def4821b5a775f0375524fc.lib ",
   "modules": {
      "\\mul_32": {
         "num_wires":         5311,
         "num_wire_bits":     5436,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         5371,
         "area":              53510.070400,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 133,
            "sky130_fd_sc_hd__a211oi_2": 161,
            "sky130_fd_sc_hd__a21bo_2": 101,
            "sky130_fd_sc_hd__a21boi_2": 14,
            "sky130_fd_sc_hd__a21o_2": 393,
            "sky130_fd_sc_hd__a21oi_2": 212,
            "sky130_fd_sc_hd__a22o_2": 214,
            "sky130_fd_sc_hd__a22oi_2": 176,
            "sky130_fd_sc_hd__a2bb2o_2": 14,
            "sky130_fd_sc_hd__a2bb2oi_2": 8,
            "sky130_fd_sc_hd__a311o_2": 2,
            "sky130_fd_sc_hd__a31o_2": 83,
            "sky130_fd_sc_hd__a31oi_2": 5,
            "sky130_fd_sc_hd__a32o_2": 3,
            "sky130_fd_sc_hd__a32oi_2": 2,
            "sky130_fd_sc_hd__a41o_2": 1,
            "sky130_fd_sc_hd__and2_2": 121,
            "sky130_fd_sc_hd__and2b_2": 171,
            "sky130_fd_sc_hd__and3_2": 217,
            "sky130_fd_sc_hd__and3b_2": 4,
            "sky130_fd_sc_hd__and4_2": 233,
            "sky130_fd_sc_hd__and4bb_2": 35,
            "sky130_fd_sc_hd__inv_2": 69,
            "sky130_fd_sc_hd__nand2_2": 460,
            "sky130_fd_sc_hd__nand2b_2": 92,
            "sky130_fd_sc_hd__nand3_2": 342,
            "sky130_fd_sc_hd__nand3b_2": 14,
            "sky130_fd_sc_hd__nand4_2": 154,
            "sky130_fd_sc_hd__nand4b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 319,
            "sky130_fd_sc_hd__nor3_2": 55,
            "sky130_fd_sc_hd__nor3b_2": 5,
            "sky130_fd_sc_hd__nor4_2": 15,
            "sky130_fd_sc_hd__o211a_2": 150,
            "sky130_fd_sc_hd__o211ai_2": 129,
            "sky130_fd_sc_hd__o21a_2": 71,
            "sky130_fd_sc_hd__o21ai_2": 105,
            "sky130_fd_sc_hd__o21ba_2": 93,
            "sky130_fd_sc_hd__o21bai_2": 61,
            "sky130_fd_sc_hd__o221a_2": 1,
            "sky130_fd_sc_hd__o22a_2": 11,
            "sky130_fd_sc_hd__o22ai_2": 7,
            "sky130_fd_sc_hd__o2bb2a_2": 23,
            "sky130_fd_sc_hd__o311a_2": 2,
            "sky130_fd_sc_hd__o31a_2": 3,
            "sky130_fd_sc_hd__or2_2": 102,
            "sky130_fd_sc_hd__or3_2": 101,
            "sky130_fd_sc_hd__or3b_2": 9,
            "sky130_fd_sc_hd__or4_2": 10,
            "sky130_fd_sc_hd__or4b_2": 2,
            "sky130_fd_sc_hd__or4bb_2": 18,
            "sky130_fd_sc_hd__xnor2_2": 507,
            "sky130_fd_sc_hd__xor2_2": 137
         }
      }
   },
      "design": {
         "num_wires":         5311,
         "num_wire_bits":     5436,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 129,
         "num_ports":         4,
         "num_port_bits":     129,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         5371,
         "area":              53510.070400,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 133,
            "sky130_fd_sc_hd__a211oi_2": 161,
            "sky130_fd_sc_hd__a21bo_2": 101,
            "sky130_fd_sc_hd__a21boi_2": 14,
            "sky130_fd_sc_hd__a21o_2": 393,
            "sky130_fd_sc_hd__a21oi_2": 212,
            "sky130_fd_sc_hd__a22o_2": 214,
            "sky130_fd_sc_hd__a22oi_2": 176,
            "sky130_fd_sc_hd__a2bb2o_2": 14,
            "sky130_fd_sc_hd__a2bb2oi_2": 8,
            "sky130_fd_sc_hd__a311o_2": 2,
            "sky130_fd_sc_hd__a31o_2": 83,
            "sky130_fd_sc_hd__a31oi_2": 5,
            "sky130_fd_sc_hd__a32o_2": 3,
            "sky130_fd_sc_hd__a32oi_2": 2,
            "sky130_fd_sc_hd__a41o_2": 1,
            "sky130_fd_sc_hd__and2_2": 121,
            "sky130_fd_sc_hd__and2b_2": 171,
            "sky130_fd_sc_hd__and3_2": 217,
            "sky130_fd_sc_hd__and3b_2": 4,
            "sky130_fd_sc_hd__and4_2": 233,
            "sky130_fd_sc_hd__and4bb_2": 35,
            "sky130_fd_sc_hd__inv_2": 69,
            "sky130_fd_sc_hd__nand2_2": 460,
            "sky130_fd_sc_hd__nand2b_2": 92,
            "sky130_fd_sc_hd__nand3_2": 342,
            "sky130_fd_sc_hd__nand3b_2": 14,
            "sky130_fd_sc_hd__nand4_2": 154,
            "sky130_fd_sc_hd__nand4b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 319,
            "sky130_fd_sc_hd__nor3_2": 55,
            "sky130_fd_sc_hd__nor3b_2": 5,
            "sky130_fd_sc_hd__nor4_2": 15,
            "sky130_fd_sc_hd__o211a_2": 150,
            "sky130_fd_sc_hd__o211ai_2": 129,
            "sky130_fd_sc_hd__o21a_2": 71,
            "sky130_fd_sc_hd__o21ai_2": 105,
            "sky130_fd_sc_hd__o21ba_2": 93,
            "sky130_fd_sc_hd__o21bai_2": 61,
            "sky130_fd_sc_hd__o221a_2": 1,
            "sky130_fd_sc_hd__o22a_2": 11,
            "sky130_fd_sc_hd__o22ai_2": 7,
            "sky130_fd_sc_hd__o2bb2a_2": 23,
            "sky130_fd_sc_hd__o311a_2": 2,
            "sky130_fd_sc_hd__o31a_2": 3,
            "sky130_fd_sc_hd__or2_2": 102,
            "sky130_fd_sc_hd__or3_2": 101,
            "sky130_fd_sc_hd__or3b_2": 9,
            "sky130_fd_sc_hd__or4_2": 10,
            "sky130_fd_sc_hd__or4b_2": 2,
            "sky130_fd_sc_hd__or4bb_2": 18,
            "sky130_fd_sc_hd__xnor2_2": 507,
            "sky130_fd_sc_hd__xor2_2": 137
         }
      }
}

101. Printing statistics.

=== mul_32 ===

   Number of wires:               5311
   Number of wire bits:           5436
   Number of public wires:           4
   Number of public wire bits:     129
   Number of ports:                  4
   Number of port bits:            129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5371
     sky130_fd_sc_hd__a211o_2      133
     sky130_fd_sc_hd__a211oi_2     161
     sky130_fd_sc_hd__a21bo_2      101
     sky130_fd_sc_hd__a21boi_2      14
     sky130_fd_sc_hd__a21o_2       393
     sky130_fd_sc_hd__a21oi_2      212
     sky130_fd_sc_hd__a22o_2       214
     sky130_fd_sc_hd__a22oi_2      176
     sky130_fd_sc_hd__a2bb2o_2      14
     sky130_fd_sc_hd__a2bb2oi_2      8
     sky130_fd_sc_hd__a311o_2        2
     sky130_fd_sc_hd__a31o_2        83
     sky130_fd_sc_hd__a31oi_2        5
     sky130_fd_sc_hd__a32o_2         3
     sky130_fd_sc_hd__a32oi_2        2
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2       121
     sky130_fd_sc_hd__and2b_2      171
     sky130_fd_sc_hd__and3_2       217
     sky130_fd_sc_hd__and3b_2        4
     sky130_fd_sc_hd__and4_2       233
     sky130_fd_sc_hd__and4bb_2      35
     sky130_fd_sc_hd__inv_2         69
     sky130_fd_sc_hd__nand2_2      460
     sky130_fd_sc_hd__nand2b_2      92
     sky130_fd_sc_hd__nand3_2      342
     sky130_fd_sc_hd__nand3b_2      14
     sky130_fd_sc_hd__nand4_2      154
     sky130_fd_sc_hd__nand4b_2       1
     sky130_fd_sc_hd__nor2_2       319
     sky130_fd_sc_hd__nor3_2        55
     sky130_fd_sc_hd__nor3b_2        5
     sky130_fd_sc_hd__nor4_2        15
     sky130_fd_sc_hd__o211a_2      150
     sky130_fd_sc_hd__o211ai_2     129
     sky130_fd_sc_hd__o21a_2        71
     sky130_fd_sc_hd__o21ai_2      105
     sky130_fd_sc_hd__o21ba_2       93
     sky130_fd_sc_hd__o21bai_2      61
     sky130_fd_sc_hd__o221a_2        1
     sky130_fd_sc_hd__o22a_2        11
     sky130_fd_sc_hd__o22ai_2        7
     sky130_fd_sc_hd__o2bb2a_2      23
     sky130_fd_sc_hd__o311a_2        2
     sky130_fd_sc_hd__o31a_2         3
     sky130_fd_sc_hd__or2_2        102
     sky130_fd_sc_hd__or3_2        101
     sky130_fd_sc_hd__or3b_2         9
     sky130_fd_sc_hd__or4_2         10
     sky130_fd_sc_hd__or4b_2         2
     sky130_fd_sc_hd__or4bb_2       18
     sky130_fd_sc_hd__xnor2_2      507
     sky130_fd_sc_hd__xor2_2       137

   Chip area for module '\mul_32': 53510.070400
     of which used for sequential elements: 0.000000 (0.00%)

102. Executing Verilog backend.
Dumping module `\mul_32'.

103. Executing JSON backend.
